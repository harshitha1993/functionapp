{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "vmadmin3232",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "password@32322323",
            "metadata": {
                "description": "Admin password"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "vmsimple",
            "metadata": {
                "description": "specifies the names of the vm."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "dnsPrefixForPublicIPAddress": {
            "type": "string",
            "minLength": 1,
            "maxLength": 14,
            "defaultValue": "deploy12",
            "metadata": {
                "description": "Globally unique DNS prefix for the Static IPs used to access the Virtual Machines"
            }
        },
        "OSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter",
                "2019-Datacenter-Core",
                "2019-Datacenter-Core-smalldisk",
                "2019-Datacenter-Core-with-Containers",
                "2019-Datacenter-Core-with-Containers-smalldisk",
                "2019-Datacenter-smalldisk",
                "2019-Datacenter-with-Containers",
                "2019-Datacenter-with-Containers-smalldisk"
            ],
            "metadata": {
                "description": "The windows version for the VM. This will pick a fully patched image of this given windows version."
            }
        },
        "image_resourcegroup_name": {
            "type": "string",
            "defaultValue": "test",
            "metadata": {
                "description": "the resourcegroup name in which created a image for creating vm"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "Size of the virtual machines"
            }
        },
        "lbPublicIpAddressName": {
            "type": "string",
            "defaultValue": "publicIP1",
            "metadata": {
                "description": "publicIP address name of the loadbalancer."
            }
        },
        "lbSkuName": {
            "type": "string",
            "defaultValue": "Standard",
            "metadata": {
                "description": "SKU name of the loadbalancer"
            }
        }
    },
    "functions": [],
    "variables": {
        "availabilitySetName": "AvSet",
        "vmName": "vmsimple",
        "storageAccountType": "Standard_LRS",
        "storageAccountName": "[uniqueString(resourceGroup().id)]",
        "vnetName": "vnet",
        "subnetName": "backendSubnet",
        "loadBalancerName": "load",
        "networkInterfaceName": "nic",
        "PublicIPAddressName": "public",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
        "networkSecurityGroupName": "NSG"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "StorageV2"
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySetName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 2,
                "PlatformFaultDomainCount": 2
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('vmName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nic",
                "[variables('availabilitySetName')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[resourceId(parameters('image_Resourcegroup_name'),'Microsoft.Compute/images', 'testvmimage')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterfaceName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('loadBalancerName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'BackendPool1')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "name": "[parameters('lbPublicIPAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('lbSkuName')]"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-06-01",
            "name": "[variables('loadBalancerName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[parameters('lbPublicIpAddressName')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontend",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('lbPublicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPool1"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), 'LoadBalancerFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'BackendPool1')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), 'lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "lbrule"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), 'LoadBalancerFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'BackendPool1')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), 'lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "lbrule1"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "name": "[variables('PublicIPAddressName')]",
            "type": "Microsoft.Network/PublicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "comments": "Public IP for NIC of the first VM",
            "properties": {
                "PublicIpAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsPrefixForPublicIPAddress'))]"
                }
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "comments": "NSG for NIC of the first VM",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-80",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "80",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "virtualMachineResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        }
    }
}